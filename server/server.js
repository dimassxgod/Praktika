/**
 * FitApp - server.js
 * –ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Ñ–∏—Ç–Ω–µ—Å-–∑–∞–ø–∏—Å–∏
 * –ü–µ—Ä–µ–ø–∏—Å–∞–Ω –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å JSON —Ñ–∞–π–ª–∞–º–∏ –≤–º–µ—Å—Ç–æ MongoDB
 */

// –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
require('dotenv').config();

const express = require('express');
const cors = require('cors');
const path = require('path');
const helmet = require('helmet');
const rateLimit = require('express-rate-limit');
const fs = require('fs').promises;

// –ò–º–ø–æ—Ä—Ç –º–∞—Ä—à—Ä—É—Ç–æ–≤
const authRoutes = require('./routes/authRoutes');
const bookingRoutes = require('./routes/bookingRoutes');
const contentRoutes = require('./routes/contentRoutes');
const profileRoutes = require('./routes/profileRoutes');

// –ò–º–ø–æ—Ä—Ç –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω–æ–≥–æ –ü–û
const { authenticateToken } = require('./middleware/auth');

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è JSON –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
const initJsonDatabase = async () => {
    const dataDir = path.join(__dirname, 'data');
    
    // –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É data –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    try {
        await fs.access(dataDir);
    } catch (error) {
        await fs.mkdir(dataDir, { recursive: true });
        console.log('üìÅ –°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞ data/');
    }
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º JSON —Ñ–∞–π–ª—ã –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    const jsonFiles = [
        { name: 'users.json', data: [] },
        { name: 'trainers.json', data: [] },
        { name: 'bookings.json', data: [] },
        { name: 'exercises.json', data: [] },
        { name: 'nutrition.json', data: [] },
        { name: 'profiles.json', data: [] }
    ];
    
    for (const file of jsonFiles) {
        const filePath = path.join(dataDir, file.name);
        try {
            await fs.access(filePath);
        } catch (error) {
            await fs.writeFile(filePath, JSON.stringify(file.data, null, 2));
            console.log(`üìÑ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª ${file.name}`);
        }
    }
    
    console.log('‚úÖ JSON –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
};

const app = express();
const PORT = process.env.PORT || 3000;

// Middleware –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
app.use(helmet({
    contentSecurityPolicy: {
        directives: {
            defaultSrc: ["'self'"],
            styleSrc: ["'self'", "'unsafe-inline'", "https://cdnjs.cloudflare.com"],
            scriptSrc: ["'self'", "'unsafe-inline'"],
            imgSrc: ["'self'", "data:", "https:"],
            fontSrc: ["'self'", "https://cdnjs.cloudflare.com"]
        }
    }
}));

// Rate limiting
const limiter = rateLimit({
    windowMs: 15 * 60 * 1000, // 15 –º–∏–Ω—É—Ç
    max: 100, // –º–∞–∫—Å–∏–º—É–º 100 –∑–∞–ø—Ä–æ—Å–æ–≤ —Å –æ–¥–Ω–æ–≥–æ IP
    message: {
        error: '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤ —Å —ç—Ç–æ–≥–æ IP, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'
    }
});

app.use(limiter);

// –û—Å–Ω–æ–≤–Ω—ã–µ middleware
app.use(cors({
    origin: process.env.NODE_ENV === 'production' 
        ? ['https://yourdomain.com'] 
        : ['http://localhost:3000', 'http://127.0.0.1:3000', 'http://localhost:5500'],
    credentials: true
}));

app.use(express.json({ limit: '10mb' }));
app.use(express.urlencoded({ extended: true, limit: '10mb' }));

// –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
// –ü–∞–ø–∫–∞ public –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ —É—Ä–æ–≤–µ–Ω—å –≤—ã—à–µ –ø–∞–ø–∫–∏ server, –ø–æ—ç—Ç–æ–º—É –∏—Å–ø–æ–ª—å–∑—É–µ–º ../
app.use('/css', express.static(path.join(__dirname, '../public/css')));
app.use('/js', express.static(path.join(__dirname, '../public/js')));
app.use('/assets', express.static(path.join(__dirname, '../public/assets')));

// API –º–∞—Ä—à—Ä—É—Ç—ã
app.use('/api/auth', authRoutes);
app.use('/api/bookings',  bookingRoutes);
app.use('/api/content', contentRoutes);
app.use('/api/profile', authenticateToken, profileRoutes);

// –ó–¥–æ—Ä–æ–≤—å–µ API
app.get('/api/health', (req, res) => {
    res.json({
        status: 'OK',
        database: 'JSON Files',
        timestamp: new Date().toISOString(),
        uptime: process.uptime()
    });
});

// –≠–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
app.get('/api/database/stats', async (req, res) => {
    try {
        const dataDir = path.join(__dirname, 'data');
        const files = await fs.readdir(dataDir);
        const stats = {};
        
        for (const file of files) {
            if (file.endsWith('.json')) {
                const filePath = path.join(dataDir, file);
                const data = JSON.parse(await fs.readFile(filePath, 'utf8'));
                stats[file.replace('.json', '')] = {
                    count: Array.isArray(data) ? data.length : Object.keys(data).length,
                    size: (await fs.stat(filePath)).size
                };
            }
        }
        
        res.json(stats);
    } catch (error) {
        res.status(500).json({
            status: 'error',
            message: '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö'
        });
    }
});

// –ú–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è HTML —Å—Ç—Ä–∞–Ω–∏—Ü
// –ò—Å–ø–æ–ª—å–∑—É–µ–º ../ —á—Ç–æ–±—ã –≤—ã–π—Ç–∏ –∏–∑ –ø–∞–ø–∫–∏ server –≤ –ø–∞–ø–∫—É Praktika, –≥–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è public
app.get('/', (req, res) => {
    res.sendFile(path.join(__dirname, '../public', 'pages', 'index.html'));
});

app.get('/trainers', (req, res) => {
    res.sendFile(path.join(__dirname, '../public', 'pages', 'trainers.html'));
});

app.get('/exercises', (req, res) => {
    res.sendFile(path.join(__dirname, '../public', 'pages', 'exercises.html'));
});

app.get('/nutrition', (req, res) => {
    res.sendFile(path.join(__dirname, '../public', 'pages', 'nutrition.html'));
});

app.get('/profile', (req, res) => {
    res.sendFile(path.join(__dirname, '../public', 'pages', 'profile.html'));
});

app.get('/auth', (req, res) => {
    res.sendFile(path.join(__dirname, '../public', 'pages', 'auth.html'));
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ 404 –æ—à–∏–±–æ–∫
app.use((req, res, next) => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –Ω–µ API –∑–∞–ø—Ä–æ—Å
    if (req.path.startsWith('/api/')) {
        return res.status(404).json({
            status: 'error',
            message: 'API endpoint not found'
        });
    }
    
    // –î–ª—è –æ–±—ã—á–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º 404 —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–ª–∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é
    res.status(404).sendFile(path.join(__dirname, '../public', 'pages', 'index.html'));
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
app.use((err, req, res, next) => {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', err.stack);
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –æ—à–∏–±–∫–∏
    const status = err.status || err.statusCode || 500;
    
    res.status(status).json({
        status: 'error',
        message: status === 500 ? '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' : err.message,
        ...(process.env.NODE_ENV === 'development' && { stack: err.stack })
    });
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
const startServer = async () => {
    try {
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º JSON –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        await initJsonDatabase();
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
        const server = app.listen(PORT, () => {
            console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
            console.log(`üåê –†–µ–∂–∏–º: ${process.env.NODE_ENV || 'development'}`);
            console.log(`üìÅ –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã: ${path.join(__dirname, '../public')}`);
            console.log(`üíæ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: JSON —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫–µ data/`);
            console.log(`üîó –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã:`);
            console.log(`   - http://localhost:${PORT}/`);
            console.log(`   - http://localhost:${PORT}/trainers`);
            console.log(`   - http://localhost:${PORT}/exercises`);
            console.log(`   - http://localhost:${PORT}/nutrition`);
            console.log(`   - http://localhost:${PORT}/profile`);
            console.log(`   - http://localhost:${PORT}/auth`);
            console.log('‚úã –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C');
        });
        
        // Graceful shutdown
        process.on('SIGTERM', () => {
            server.close(() => {
                console.log('üîÑ –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
                process.exit(0);
            });
        });
        
        // –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º server –¥–ª—è graceful shutdown
        module.exports = { app, server };
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', error);
        process.exit(1);
    }
};

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
startServer();